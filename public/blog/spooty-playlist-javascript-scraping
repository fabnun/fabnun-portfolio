
        <!DOCTYPE html>
        <html lang="es">
        
          <head>
            <meta charset="utf-8" />
            <meta http-equiv="X-UA-Compatible" content="IE=edge" />
            <meta name="viewport" content="width=device-width,initial-scale=1.0" />
            <meta name="author" content="Fabián Núñez" />
            <meta name="description" content="Portafolio, Curriculum y Blog de Fabián Núñez" />
            <base href="/" />
            <link rel="icon" href="/icon.svg" />
            <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
            <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;400&display=swap" />
            
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" crossorigin="anonymous" />
            <link rel="stylesheet" href="/blog/style.css?v=1676430971349">
            <link rel="stylesheet" href="/blog/normalize.css?v=1676430971349">
            <link rel="stylesheet" href="/blog/styles/paraiso-dark.min.css">
            <link rel="stylesheet" href="/blog/md.css?v=1676430971349">
            <script src="/blog/highlight.min.js"></script>
            
            <style>
              #idc-container-parent{
                display: none;
              }
            </style>
            <title>Como obtener las canciones de una playlist en Spotify con JavaScript</title>
          </head>
          <body>
            
            <div class="header">
              <div class="container">
                <div style="float: right;width: 90px;">
                  <span class="date">11/02/23</span><br>
                  <a class="date" href="/blog/">< Volver</a>
                </div>
                <h1 style="margin-top:0;font-size:28px">Como obtener las canciones de una playlist en Spotify con JavaScript</h1>
                <hr>
                <h3>TAGS: javascript, spotify, playlist, dynamic-web-scraping</h3>
              </div>
            </div>
            <div class="container">
              
              <div class="row">
                <div id="app" class="md col-12">

<p>Si quieres migrar tus playlists favoritas de Spotify a YouTube Music y ahorrar algunos pesos, una opción es hacerlo por tu cuenta. Con un poco de conocimiento técnico, puedes utilizar JavaScript para obtener los datos de tus canciones y guardarlos en un archivo CSV.</p>
<p>En este artículo, te mostraré los pasos que debes seguir para lograrlo:</p>
<ol>
<li>Inicia sesión en Spotify en tu navegador y abre la playlist que deseas migrar.</li>
<li>Accede a las herramientas de desarrollador de tu navegador (presionando F12 en Chrome o Edge).</li>
<li>Dirígete a la pestaña Console. Copia, pega y ejecuta el siguiente script en la consola. Es importante destacar que, aunque comparto este script con fines educativos y he comentado todo el código, debes tener precaución al ejecutar scripts de terceros, puede ser que algunos scripts no sean seguros y puedan poner en riesgo la seguridad de tus datos.</li>
</ol>
<p>Al ejecutar el script, se definen dos métodos: start() y stop(). El método start() captura los datos de las canciones mientras haces scroll manualmente y el método stop() detiene el proceso y descarga un archivo CSV con los datos de tus canciones.</p>
<pre>javascript:<button onclick="copy(event)" style="float:right;color:yellow;font-weight:bolder;background:transparent;border:none;outline:none;">copiar</button><code class="language-javascript">//interval representa la búsqueda que se ejecutara cada 100ms, mientras hacemos el scroll manual
let interval;
//lastSize indica cuantas canciones se han encontrado
let lastSize;
//map es donde se guardan las canciones encontradas
const map = new Map();
map.set(&apos;&apos;, [&apos;artist&apos;, &apos;album&apos;, &apos;song&apos;, &apos;duration&apos;, &apos;status&apos;]);

//función que inicia el proceso de búsqueda que requiere scroll manual
const start = () =&gt; {
  //inicializamos el tamaño en cero
  lastSize = 0;
  //iniciamos el proceso y lo guardamos en la variable interval
  interval = setInterval(() =&gt; {
    //obtenemos todos los elementos que contienen canciones (pero no es la lista completa, hay que hacer scroll)
    const tracks = [...document.querySelectorAll(&apos;[data-testid=tracklist-row]&apos;)];
    //recorremos cada elemento
    for (track of tracks) {
      //obtenemos los datos de la canción
      const song = track.querySelector(&apos;[data-testid=internal-track-link]&apos;)?.innerText;
      const artist = track.querySelector(&apos;span a&apos;)?.innerText;
      const album = track.children[2].querySelector(&apos;span a&apos;)?.innerText;
      const duration = track.children[4]?.innerText;
      //creamos una llave única para cada canción
      const key = `${artist} - ${album} - ${song}`;
      //si la llave no existe en el mapa, la agregamos
      if (!map.has(key)) {
        //si alguno de los datos está vacío, mostramos un error
        if (!song || !artist || !album || !duration) {
          console.log(&apos;Error&apos;, key);
          map.set(key, [artist, album, song, duration, &apos;ERROR&apos;]);
        } else {
          //sino agregamos la canción al mapa
          map.set(key, [artist, album, song, duration]);
        }
      }
    }
    //obtenemos el tamaño del mapa
    const size = map.size;
    //si el tamaño es mayor al último tamaño, mostramos el tamaño actual y actualizamos el último tamaño
    if (size &gt; lastSize) {
      console.log(`${size} canciones encontradas`);
      lastSize = size;
    }
  }, 100); //ejecutamos el proceso cada 100ms
};

//función que detiene el proceso de búsqueda y genera el archivo csv
const stop = () =&gt; {
  //detenemos el proceso
  clearInterval(interval);
  //ordenamos las llaves del mapa
  const keys = [...map.keys()].sort();
  let csv = &apos;&apos;;
  //recorremos las llaves ordenadas
  for (key of keys) {
    //obtenemos los datos de la canción
    const data = map.get(key);
    //llenamos el csv con los datos de la canción
    csv += `&quot;${data.join(&apos;&quot;,&quot;&apos;)}&quot;\n`;
  }
  //descargamos el csv
  const blob = new Blob([csv], { type: &apos;text/csv&apos; });
  const url = window.URL.createObjectURL(blob);
  const a = document.createElement(&apos;a&apos;);
  a.setAttribute(&apos;href&apos;, url);
  a.setAttribute(&apos;style&apos;, &apos;display: none&apos;);
  a.setAttribute(&apos;download&apos;, &apos;canciones.csv&apos;);
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
};</code></pre><p>Para ejecutar el script, escribimos start() y presionamos [enter], luego hacemos scroll hasta el final de la página. Una vez que hayas terminado, escribe stop() y presiona [enter] para detener el proceso y descargar el archivo CSV. Si tienes alguna duda o necesitas más información sobre el código, no dudes en preguntar en los comentarios.</p>
<p><div style="position: relative;padding-bottom: 56.25%;"><iframe width="560" height="315" src="https://www.youtube.com/embed/-Ladto5MJEs?rel=0&amp;controls=1&amp;mute=0&amp;showinfo=0&amp;version=3" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" style="border-radius:8px;position: absolute;top: 0;left: 0;width: 100%;height: 100%;" allowfullscreen></iframe></div>
    </p>
<p>En una próxima publicación, mostraré cómo agregar las canciones a YouTube Music. ¡No te pierdas la próxima parte de este tutorial!</p>



                </div>
              </div>
            </div>
            <span id="IDCommentsPostTitle" style="display:none"></span>
          </body>
          
          <script>

            async function copy(event) {
              try {
                const code=event.target.parentElement.children[1].innerText
                await navigator.clipboard.writeText(code);
                alert('Texto copiado al portapapeles.');
              } catch (err) {
                alert('Error al copiar texto al portapapeles: '+ err.message);
              }
            }
            var idcomments_acct = '7133cfcf914d938be0f4d8672fffda74';
            var idcomments_post_id;
            var idcomments_post_url;
            if(window.location.port==="8080"){
              let lastTime=window.localStorage.getItem('lastTime')||"0";
              setInterval(async () => {
                const resp=await fetch("/blog/updateTime?timestamp="+Date.now(),{
                  method: 'get'
                });
                const updateTime=await resp.text();
                if(updateTime!==lastTime){
                  console.log(lastTime, updateTime);
                  lastTime=updateTime;
                  window.localStorage.setItem('lastTime',lastTime);
                  window.location.reload();
                }
              }, 1000);
            }
          </script>
          <script type="text/javascript" src="https://www.intensedebate.com/js/genericCommentWrapperV2.js"></script>
          <script>
          const interval=setInterval(() => {
            const div=document.getElementById('idc-container-parent')
            if (div?.style){
              div.style.display='block';
              clearInterval(interval);
            }
          }, 200);
          document.querySelectorAll('.language-javascript,.language-html,.language-css,.language-java').forEach((el) => {
            hljs.highlightElement(el);
          });
          </script>
        </html>
      